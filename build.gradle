plugins {
    id "org.jetbrains.kotlin.jvm" version "1.3.0"
}

repositories {
    mavenCentral()
}

ext {
    versionNumber = project.hasProperty('versionNumber') ? property('versionNumber') : 'SNAPSHOT-' + new Date().format('yyyyMMddHHmmss')
    projectIds = ['group': 'teamcity-nuget-support', 'version': versionNumber]

    teamcityVersion = project.findProperty('teamcityVersion') ?: '2022.06'
    teamcityDir = project.findProperty('teamcityDir') ?: "$rootDir/servers/TeamCity-${teamcityVersion}"
    if (teamcityDir == null || !file(teamcityDir).isDirectory()) {
        throw new InvalidUserDataException('Please, execute gradle task `:nuget-server:installTeamCity` ' +
                'or specify correct `teamcityDir` path in gradle.properties file')
    }
    teamcityDir = teamcityDir.replace("\\", "/")
    if (teamcityDir.endsWith("/")) {
        teamcityDir = teamcityDir.substring(0, teamcityDir.length() - 5)
    }
    println "TeamCity directory: " + teamcityDir
    downloadsDir = project.findProperty('downloads.dir') ?: "$rootDir/downloads"
    serversDir = project.findProperty('servers.dir') ?: "$rootDir/servers"
}

group = projectIds.group
version = projectIds.version

allprojects {
    group = projectIds.group
    version = projectIds.version
}

subprojects { subproject ->
    if (!subproject.name.endsWith("extensions")) {
        apply plugin: "kotlin"

        sourceSets {
            main {
                java {
                    srcDirs = ['src']
                }

                resources {
                    srcDirs = ['resources']
                }
            }

            test {
                java {
                    srcDirs = ['test']
                }

                resources {
                    srcDirs = ['testResources']
                }
            }
        }

        repositories {
            maven { url '../local-repo' }
            maven { url 'http://repository.apache.org/snapshots/' }
            mavenCentral()
            mavenLocal()
        }

        test.useTestNG()
        jar.version = null

        tasks.withType(JavaCompile) {
            sourceCompatibility = "1.8"
            targetCompatibility = "1.8"
        }
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}
